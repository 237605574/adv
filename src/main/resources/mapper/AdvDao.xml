<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace指定我们的到具体的bean -->
<mapper namespace="com.adv.dao.AdvDao">
    <insert id="addAdv">
        INSERT IGNORE INTO
            `adv`
            (`id`, `file_url`, `name`, `start_date`, `end_date`, `type`, `homepage`, `display_detail`)
        VALUES
            (#{advObj.id}, #{advObj.fileUrl}, #{advObj.name}, #{advObj.startDate}, #{advObj.endDate}, #{advObj.type},
             #{advObj.homepage},
             #{advObj.displayDetail})
    </insert>
    <select id="checkNameCount" resultType="Integer">
        SELECT count(*)
        FROM
        `adv`
        WHERE
        `name` = #{advObj.name}
        <if test="advObj.id!=null">
            AND
            `id`!=#{advObj.id}
        </if>
    </select>

    <!--resultMap填type-->
    <select id="getAdvListByUser" resultMap="AdvObj">
        SELECT adv.*
        FROM
            `adv`, `user_adv`
        WHERE
            adv.id = user_adv.adv_id AND user_adv.user_id = #{user.id} AND adv.is_valid = 1;

    </select>
    <!--使用ResultMap来进行返回list<AdvObj> 类型的查询-->
    <resultMap id="AdvObj" type="com.adv.entity.AdvObj">
        <!--
        字标签属性:id 表示属性
        column：数据库查询的列的字段，property：自定义数据类型的变量的名字
        -->
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="type" property="type"/>
        <result column="file_url" property="fileUrl"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="is_valid" property="isValid"/>
        <result column="homepage" property="homepage"/>
        <result column="display_detail" property="displayDetail"/>
    </resultMap>
    <select id="getAdv" resultType="com.adv.entity.AdvObj">
        SELECT *
        FROM
            `adv`
        WHERE adv.id = #{advId}
    </select>
    <delete id="deleteAdv">
        DELETE FROM `adv`
        WHERE adv.id = #{advId}
    </delete>
    <update id="updateState">
        UPDATE
            `adv`
        SET
            `is_valid` = 0
        WHERE
            NOW() > `end_date` AND `is_valid` = 1
    </update>
    <update id="updateAdv">
        UPDATE
        `adv`
        SET
        `name` = #{advObj.name},
        `start_date` = #{advObj.startDate},
        `end_date` = #{advObj.endDate},
        `type` = #{advObj.type},
        `homepage` = #{advObj.homepage},
        `display_detail` = #{advObj.displayDetail}
        <if test="advObj.fileUrl!=null">
            ,`file_url` = #{advObj.fileUrl}
        </if>
        WHERE
        `id` = #{advObj.id}
    </update>
    <select id="queryAdv" resultMap="AdvObj">
        SELECT adv.*
        FROM
        `adv` ,`adv_tag`
        WHERE
        <if test="advObj!=null">
            <if test="advObj.id!=null">
                #{advObj.id} = adv.id AND
            </if>
            <if test="advObj.name!=null and advObj.name!=''">
                adv.name LIKE CONCAT('%',#{advObj.name},'%' ) AND
            </if>
            <if test="advObj.type!=null">
                adv.type = #{advObj.type} AND
            </if>
            <if test="advObj.homepage!=null and advObj.homepage!=''">
                adv.homepage = #{advObj.homepage} AND
            </if>
            <if test="advObj.startDate!=null">
                adv.start_date >= #{advObj.startDate}AND
            </if>
            <if test="advObj.endDate!=null">
                #{advObj.endDate}>= adv.endDate AND
            </if>
            <if test="advObj.userTagIds != null and advObj.userTagIds.size()>0">
                adv.id = adv_tag.adv_id AND
                NOT EXISTS(SELECT adv_tag.adv_id WHERE adv_tag.tag_id NOT IN
                <foreach item="item" index="index" collection="advObj.userTagIds" open="(" close=")" separator=",">
                    #{item}
                </foreach>
                ) AND
            </if>
        </if>
        1 = 1
        GROUP BY adv.id
        ORDER BY
        adv.name
        DESC
        LIMIT #{offset}, #{limit}
        ;
    </select>
    <select id="checkIdCount" resultType="Integer">
        SELECT COUNT(*)
        FROM `adv`
        WHERE
            `id` = #{advId};
    </select>

</mapper>